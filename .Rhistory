getwd
getwd()
wflow_build()
library("workflowr")
wflow_build()
wflow_git_config(user.name = "Hang Chen", user.email = "chen_h@outlook.com")
wflow_start("myproject")
rmarkdown::find_pandoc()
# load
setwd("./rotation2/")
library(workflowr)
library(Seurat)
library(dplyr)
library(ggplot2)
library(ggeasy)
Expression <- readRDS("../Morris_2021/filter/Expression.rds", refhook = NULL)
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
file:///home/hang/rotation2/output/Hashtag/Hashtag_matrix_barcodes_summary.csv
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
mtx <- "Expression"
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
mtx <- Expression
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_dist_plot_after_QC <- function(mtx){
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
# UMI counts for all cells  (not cumulative)
barcode_dist <- barcode_means[,"barcode_non_zero_count"]
names(barcode_dist) <- 1:length(barcode_dist)
# UMI counts for all cells (cdf)
filename <- paste0("./analysis/cache/3_", deparse(substitute(mtx)), "_barcode_dist_qc_cdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
plot(ecdf(barcode_dist), main="CDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="CDF")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 0.6, "(After QC: UMI counts >= 850)")
#text(200, 0.9, "(UMI count < 50 excluded)")
dev.off()
# UMI counts for all cells (pdf)
filename <- paste0("./analysis/cache/4_", deparse(substitute(mtx)), "_barcode_dist_qc_pdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
plot(barcode_dist, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
#PDF <- hist(barcode_dist, freq=F, breaks=150, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 5e-4, "(After QC: UMI counts >= 850)")
#text(290, 0.006, "(UMI count < 50 excluded)")
dev.off()
}
barcode_dist_plot_after_QC(Expression)
barcode_dist_plot_after_QC <- function(mtx){
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
# UMI counts for all cells  (not cumulative)
barcode_dist <- barcode_means[,"barcode_non_zero_count"]
names(barcode_dist) <- 1:length(barcode_dist)
# UMI counts for all cells (cdf)
filename <- paste0("./analysis/cache/3_", deparse(substitute(mtx)), "_barcode_dist_qc_cdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
plot(ecdf(barcode_dist), main="CDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="CDF")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 0.6, "(After QC: UMI counts >= 850)")
#text(200, 0.9, "(UMI count < 50 excluded)")
dev.off()
# UMI counts for all cells (pdf)
filename <- paste0("./analysis/cache/4_", deparse(substitute(mtx)), "_barcode_dist_qc_pdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
#plot(barcode_dist, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
hist(barcode_dist, freq=F, breaks=150, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 5e-4, "(After QC: UMI counts >= 850)")
#text(290, 0.006, "(UMI count < 50 excluded)")
dev.off()
}
barcode_dist_plot_after_QC(Expression)
barcode_dist_plot_after_QC <- function(mtx){
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
# UMI counts for all cells  (not cumulative)
barcode_dist <- barcode_means[,"barcode_non_zero_count"]
names(barcode_dist) <- 1:length(barcode_dist)
# UMI counts for all cells (cdf)
filename <- paste0("./analysis/cache/3_", deparse(substitute(mtx)), "_barcode_dist_qc_cdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
plot(ecdf(barcode_dist), main="CDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="CDF")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 0.6, "(After QC: UMI counts >= 850)")
#text(200, 0.9, "(UMI count < 50 excluded)")
dev.off()
# UMI counts for all cells (pdf)
filename <- paste0("./analysis/cache/4_", deparse(substitute(mtx)), "_barcode_dist_qc_pdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
#plot(barcode_dist, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
#hist(barcode_dist, freq=F, breaks=150, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
EnvStats::epdfPlot(barcode_dist, epdf.col = "red")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 5e-4, "(After QC: UMI counts >= 850)")
#text(290, 0.006, "(UMI count < 50 excluded)")
dev.off()
}
barcode_dist_plot_after_QC(Expression)
barcode_dist_plot_after_QC <- function(mtx){
filename <- paste0("./analysis/cache/", deparse(substitute(mtx)), "_matrix_barcodes_summary.csv")
barcode_means <- read.csv(filename, header = TRUE)
barcode_means <- dplyr::filter(barcode_means, barcode_non_zero_count >=850)
# UMI counts for all cells  (not cumulative)
barcode_dist <- barcode_means[,"barcode_non_zero_count"]
names(barcode_dist) <- 1:length(barcode_dist)
# UMI counts for all cells (cdf)
filename <- paste0("./analysis/cache/3_", deparse(substitute(mtx)), "_barcode_dist_qc_cdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
plot(ecdf(barcode_dist), main="CDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="CDF")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 0.6, "(After QC: UMI counts >= 850)")
#text(200, 0.9, "(UMI count < 50 excluded)")
dev.off()
# UMI counts for all cells (pdf)
filename <- paste0("./analysis/cache/4_", deparse(substitute(mtx)), "_barcode_dist_qc_pdf.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
#plot(barcode_dist, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
hist(barcode_dist, freq=F, breaks=150, main="PDF: UMI counts in each barcode (cell)", xlab="UMI counts in each barcode (cell)", ylab="PDF")
#EnvStats::epdfPlot(barcode_dist, epdf.col = "red")
#abline(v=850, col="red", lwd=2, lty=2)
text(7000, 5e-4, "(After QC: UMI counts >= 850)")
#text(290, 0.006, "(UMI count < 50 excluded)")
dev.off()
}
barcode_dist_plot_after_QC(Expression)
# cleanup environment
rm(list = ls())
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
setwd("~/rotation2/")
library(Seurat)
library(dplyr)
library(ggplot2)
library(ggeasy)
Expression <- readRDS("../Morris_2021/filter/Expression.rds", refhook = NULL)
if (dir.exists("./analysis/cache/")==FALSE){
dir.create("./analysis/cache/")
}
# calculate zero proportions & expectations
whichmodel <- read.csv("./analysis/cache/Expression_filtered_means_non-zeros.csv", header = TRUE)
whichmodel <- dplyr::mutate(whichmodel, zero_prop = 1 - target_non_zero_count / ncol(Expression@assays$RNA@counts) )
whichmodel_10 <- dplyr::filter(whichmodel, target_mean <= 10)
# plot
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
# plot
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions", x = "Gene Mean", y = "Zero Proportion (Poisson regression)") +
ggeasy::easy_center_title()
dev.off()
# plot
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
# plot
filename <- paste0("./analysis/cache/0_zero_proportions(Poisson).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method = "glm.nb")) +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method = "glm.nb") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
labs(title = "Zero Proportions", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
labs(title = "Zero Proportions", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions(Poisson).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
labs(title = "Zero Proportions", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/1_zero_proportions(Poisson).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method = "glm.nb") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method = "MASS::glm.nb") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
#geom_smooth(method = "glm.nb") +
stat_smooth(method = "glm.nb", formula = y~x, color = "green", size = 0.3) +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
library(MASS)
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
#geom_smooth(method = "glm.nb") +
stat_smooth(method = "glm.nb", formula = y~x, color = "green", size = 0.3) +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
#geom_smooth(method = "glm.nb") +
stat_smooth(method = "glm.nb", formula = y~x, color = "green") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
library(pscl)
summary(y~x, family ="poisson")
summary(y~x, family = "poisson", data = wchimodel)
summary(y~x, family = poisson, data = wchimodel)
summary(glm(y~x, family = poisson, data = wchimodel))
summary(glm(zero_prop ~ target_mean, family = poisson, data = wchimodel))
glm(zero_prop ~ target_mean, family = poisson, data = wchimodel)
summary(glm(zero_prop ~ target_mean, family = poisson, data = whichmodel))
summary(MASS::glm.nb(zero_prop ~ target_mean, data = whichmodel))
MASS::glm.nb(zero_prop ~ target_mean, data = whichmodel)
MASS::glm.nb(zero_prop ~ target_mean, data = whichmodel, start = NULL)
MASS::glm.nb(zero_prop ~ target_mean, data = whichmodel)
MASS::glm.nb(whichmodel$zero_prop ~ whichmodel$target_mean, data = whichmodel)
View(whichmodel)
glm.nb(whichmodel$zero_prop ~ whichmodel$target_mean, data = whichmodel)
test <- glm.nb(zero_prop ~ target_mean, data = whichmodel)
View(whichmodel)
whichmodel_11 <- dplyr::filter(whichmodel_10, target_mean != 0)
test <- glm.nb(zero_prop ~ target_mean, data = whichmodel_11)
whichmodel_11 <- dplyr::filter(whichmodel_10, target_mean != 0)
glm.nb(zero_prop ~ target_mean, data = whichmodel_11)
whichmodel_11 <- dplyr::filter(whichmodel_10, zero_prop != 0)
glm.nb(zero_prop ~ target_mean, data = whichmodel_11)
whichmodel_10 <- dplyr::filter(whichmodel, target_mean <= 10 & zero_prop != 0)
rm(whichmodel_!1
rm(whichmodel_11)
# calculate zero proportions & expectations
whichmodel <- read.csv("./analysis/cache/Expression_filtered_means_non-zeros.csv", header = TRUE)
whichmodel <- dplyr::mutate(whichmodel, zero_prop = 1 - target_non_zero_count / ncol(Expression@assays$RNA@counts) )
whichmodel_10 <- dplyr::filter(whichmodel, target_mean <= 10 & zero_prop != 0)
# regression
summary(glm(zero_prop ~ target_mean, family = poisson, data = whichmodel_10)) # poisson
glm.nb(zero_prop ~ target_mean, data = whichmodel_10) # negative binomial
# plot
filename <- paste0("./analysis/cache/0_zero_proportions.tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
labs(title = "Zero Proportions", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/1_zero_proportions(Poisson).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
stat_smooth(method = "glm.nb", formula = y~x, color = "green") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
summary(glm(zero_prop ~ target_mean, family = poisson, data = whichmodel_10)) # poisson
summary(glm.nb(zero_prop ~ target_mean, data = whichmodel_10)) # negative binomial
# plot
filename <- paste0("./analysis/cache/0_zero_proportions(Poisson).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/0_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
stat_smooth(method = "glm.nb", formula = y~x, color = "green") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/1_zero_proportions(Poisson).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
geom_smooth(method="glm", method.args=list(family="poisson")) +
labs(title = "Zero Proportions (Poisson regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
filename <- paste0("./analysis/cache/2_zero_proportions(negative_binomial).tif")
tiff(file=filename, width=8, height=5, units="in", res=600)
ggplot(data = whichmodel_10, aes(x= target_mean, y=zero_prop)) +
geom_jitter(width=0.05, height=0.05) +
theme_light() +
stat_smooth(method = "glm.nb", formula = y~x, color = "green") +
labs(title = "Zero Proportions (Negative binomial regression)", x = "Gene Mean", y = "Zero Proportion") +
ggeasy::easy_center_title()
dev.off()
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
# workflowR publish
wflow_publish("./analysis/*.Rmd")
