getwd
getwd()
wflow_build()
library("workflowr")
wflow_build()
wflow_git_config(user.name = "Hang Chen", user.email = "chen_h@outlook.com")
wflow_start("myproject")
rmarkdown::find_pandoc()
# workflowR publish
wflow_publish("./notes/*.Rmd")
# load
setwd("./Developing/rotation2/")
library(workflowr)
setwd("~/Developing/rotation2/")
library (MASS)
library(Matrix)
library(dplyr)
# try function
try <- function(code, silent = FALSE) {
tryCatch(code, error = function(c) {
if (!silent) {"Error Message"}
else{code}})}
# load data
Expression <- readRDS("../Morris_2021/filter/Expression.rds", refhook = NULL)
gRNA <- readRDS("../Morris_2021/filter/gRNA.rds", refhook = NULL)
gene_matrix2 <- Expression@assays$RNA@counts
gRNA_matrix2 <- gRNA@assays$RNA@counts
rm("Expression","gRNA")
# trim genes
genes <- lapply(paste0("./output/SCEPTRE/gene-gRNA_pairs/",
list.files(path = "./output/SCEPTRE/gene-gRNA_pairs/", pattern='*_pairs.csv')),
read.csv)
genes <- do.call(rbind.data.frame, genes)[,"Gene"]
Sys.sleep(3)
gene_matrix2 <- gene_matrix2[(rownames(gene_matrix2) %in% genes), ]
rm("genes")
pairs <- read.csv("./output/SCEPTRE/gene-gRNA_pairs/positive_control_pairs.csv")
pairs <- pairs[(pairs$Gene %in% rownames(gene_matrix2)),]
genes <- c()
gRNAs <- c()
count <- nrow(pairs)
pvalues <- c()
i = 1
gene <- pairs[i,1]
gene_data <- gene_matrix2[gene,]
gRNA <- pairs[i,2]
gRNA_data <- gRNA_matrix2[gRNA,]
total_UMI <- colSums(gene_matrix2)
pair <- data.frame(gene_data, gRNA_data, total_UMI)
test <- try(glm.nb(gene_data ~ gRNA_data + total_UMI, data = pair, start = NULL))
genes <- c(genes, gene)
gRNAs <- c(gRNAs, gRNA)
coef(summary(test))
coef(summary(test))[2,4]
